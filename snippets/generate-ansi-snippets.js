import { execSync, spawnSync } from "child_process";
import { writeFileSync } from "fs";
import { AnsiUp } from "ansi_up";

function runBat(filename) {
  return execSync(`bat -p --color always --theme ansi ${filename}`, { encoding: "utf8" });
}

function runVitest() {
  return spawnSync("npm", ["exec", "vitest", "--", "--run", "--color", "--reporter", "verbose"], {
    encoding: "utf8",
  });
}

function runScreenfetch() {
  return spawnSync("screenfetch", ["-A", "Mac OS X"], { encoding: "utf8" });
}

const elixir = runBat("elixir.ex");
const python = runBat("python.py");
const typescript = runBat("typescript.ts");
const vitest = runVitest();
const screenfetch = runScreenfetch();

const au = new AnsiUp();
au.use_classes = true;

const template = `/*
 * Autogenerated file.
 * Do not touch
 * Willy
 */

export const elixirSnippet = \`${au.ansi_to_html(elixir)}\`;

export const pythonSnippet = \`${au.ansi_to_html(python)}\`;

export const typescriptSnippet = \`${au.ansi_to_html(typescript)}\`;

export const vitestSnippet = \`${au.ansi_to_html(vitest.stdout)}
${au.ansi_to_html(vitest.stderr)}\`;

export const screenfetchSnippet = \`${au.ansi_to_html(screenfetch.stdout.replaceAll("`", "\\`"))}\`;
`;

writeFileSync("../src/lib/snippets.ts", template, "utf8");

console.log("Donesies");
